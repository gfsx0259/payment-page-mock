<?php

namespace App\Stub\Session;

use App\Stub\Collection\InitialRequestCollection;

class State
{
    /**
     * @var string Unique request id generated by mock
     */
    private string $requestId;

    /**
     * @var int Route identity detected at sale request
     */
    private int $routeId;

    /**
     * @var array Initial request body
     */
    private array $initialRequest;

    private int $count = 0;
    private array $actions = [];

    /**
     * @param string $requestId
     * @param int $routeId
     * @param array $initialRequest
     */
    public function __construct(string $requestId, int $routeId, array $initialRequest)
    {
        $this->requestId = $requestId;
        $this->routeId = $routeId;
        $this->initialRequest = $initialRequest;
    }

    public function getRequestId(): string
    {
        return $this->requestId;
    }

    public function getRouteId(): string
    {
        return $this->routeId;
    }

    public function getInitialRequest(): InitialRequestCollection
    {
        return new InitialRequestCollection($this->initialRequest);
    }

    public function getCount(): int
    {
        return $this->count;
    }

    public function increaseCount(): self
    {
        $this->count += 1;

        return $this;
    }

    public function registerAction(string $key): self
    {
        if (!isset($this->actions[$key])) {
            $this->actions[$key] = false;
        }

        return $this;
    }

    public function completeAction(string $key): self
    {
        $this->actions[$key] = true;

        return $this;
    }

    public function isActionCompleted(string $key): bool
    {
        return $this->actions[$key] ?? false === true;
    }
}
